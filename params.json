{
  "name": "Sandbox",
  "tagline": "Sandbox application for Executing Malicious Process in Linux",
  "body": "#Introduction\r\n\r\n* Project       : Sandbox\r\n* Type          : System Program\r\n* Description   : Isolates, Tracks and Executes a Potentially harmful process \r\n\r\n\r\n#Requirements\r\n\r\n1. *Process Input and Execution* - Easy\r\n\r\n   + A--> Input From command line -> sandbox process_name commandline_params\r\n   + B--> check for atleast process_name \r\n   + C--> check if file exists in the current dir if not tell the user\r\n   + D--> create a isolated container \r\n   + E--> start the process tracking\r\n   + F--> start the process\r\n\r\n2. *Isolation From Remaining Systems* - Hard\r\n3. *Process Tracking To Find Whether it is harmful or not* - Medium\r\n\r\n#Architecture\r\n\r\nTreminal--Inputs--> Reader--> --creates ---> Process --> --puts into --> jail --- Tracks using ---> Tracker\r\n\r\n#High Level Design\r\n\r\n* **Interface Reader (view) : Implementation Terminal Reader** \r\n   - Reads a Process name and cmds with a space from terminal and returns the process object\r\n   - *Error* :Displays Error Mesages if Process not found in given dir or process name not given\r\n\r\n* **Interface Process (model) : Implementation ClientProcess**   \r\n    - stores process name and command line options of the process\r\n \r\n* **Interface Jail  (controller) : Implementation ContainerJail**   \r\n    - takes the process object , creates the isolated execution environment and executes the process.  \r\n    - takes tracker object if enabled tracks the behaviour of process\r\n    - sends the data to Process Reviewer to analyze and find any behaviour according to rules\r\n    - *Error* : Resources may not be available we have to handle it \r\n* **Interface Reviewer (view) : Implementation ProcessReviewer** \r\n    - recieves the methods executed by the process along with runtime stats \r\n    - logs and prints if required\r\n    - *Error*   : recieve errors or log file open errors may occur \r\n* **Interface Tracker (controller) : Implementation ProcessTracker**  \r\n    - puts a ptrace on the process\r\n    - *Error* : to be investigated  \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}